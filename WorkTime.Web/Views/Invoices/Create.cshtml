@model WorkTime.Models.Invoice

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Invoice</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProjectId" class="control-label"></label>
                <select asp-for="ProjectId" class="form-control" asp-items="ViewBag.ProjectId" onchange="getUsers()">
                    <option value="0" selected>Без проекта</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select asp-for="UserId" class ="form-control" asp-items="ViewBag.UserId" onchange="getAtributes()"></select>
            </div>
            <div class="form-group">
                <label class="control-label">Выбрать задачи с</label>
                <input type="date" id="dateFrom" class="form-control" />
                <span class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Bonus" class="control-label"></label>
                <input asp-for="Bonus" class="form-control" onchange="bonusChange()" />
                <span asp-validation-for="Bonus" class="text-danger"></span>
            </div>
            <div class="">
                <a href="#" type="button" value="Сформировать" class="btn btn-primary" onclick="getTasks()"></a>
            </div>
            <div class="form-group" id="Tasks" hidden>
                <label class="control-label">Добавить задачу</label>
                <select data-val="true" id="TasksSelect" class="form-control">
                </select>
                <a href="#" type="button" class="btn btn-primary" onclick="taskToTable()" value="+++"></a>
            </div>
            <div class="form-group">
                <table class="table" style="width:300pt">
                    <tr>
                        <th>
                            Задача
                        </th>
                        <th>
                            Количество часов
                        </th>
                        <th>
                            _
                        </th>
                    </tr>
                </table>
            </div>
            <div id="sum" class="form-group">
                <label class="row">Итого:</label>
                <div class="row">
                    <div class="col-lg-4">
                        <label>Время</label>
                        <h5 id="timeCount"></h5>
                    </div>
                    <div class="col-lg-4">
                        <label>Ставка</label>
                        <h5 id="hourlyWage"></h5>
                    </div>
                    <div class="col-lg-4">
                        <label>К оплате:</label>
                        <h5 id="sumCount"></h5>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Создать" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        let hours = 0, stake = 0, arrayId = [], bonus = 0;
        getUsers();

        function getUsers() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetUsersInProject", "GetValue")',
                data: {
                    __RequestVerificationToken: gettoken(),
                    ProjectId: getProjectId(),
                },
                success: function (result) {
                    let array = $.parseJSON(result);
                    console.log(array);
                    $("#Bonus").val(array.bonus);
                    $("#UserId").html('');
                    for (let i = 0; i < array.data.length; i++) {
                        $('#UserId').append('<option value="' + array.data[i].UserId + '">' + array.data[i].Surname + ' ' + array.data[i].Name + '</option>');
                    }
                    getAtributes();
                    //getTasks();
                }
            });
        }

        function getAtributes() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetUserAtributes", "GetValue")',
                data: {
                    __RequestVerificationToken: gettoken(),
                    ProjectId: getProjectId(),
                    UserId: getUserId()
                },
                success: function (result) {
                    let value = $.parseJSON(result);
                    //console.log(value);
                    $("#hourlyWage").html(value);
                }
            });
        }

        function getTasks() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetUserTasks", "GetValue")',
                data: {
                    __RequestVerificationToken: gettoken(),
                    ProjectId: getProjectId(),
                    UserId: getUserId(),
                },
                success: function (result) {
                    let array = $.parseJSON(result);
                    console.log(array);
                }
            })
        }

        function getProjectId() {
            if ($("#ProjectId").val()) {
                return $("#ProjectId").val();
            } else {
                return -0;
            }
        }

        function getUserId() {
            return $("#UserId").val();
        } 

        function gettoken() {
            let token = '@Html.AntiForgeryToken()';
            token = $(token).val();
            return token;
        }
    </script>
}
