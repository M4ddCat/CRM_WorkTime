@using WorkTime.Web.Services
@inject UserInformation UserInfo
@inject ProjectInformation ProjectInfo
@model IEnumerable<WorkTime.Models.UserProject>


@{
    ViewData["Title"] = "Детали проекта";
}
<div class="row">
    <div class="col">
        <h1>Детали проекта</h1>

        <h4>Название: @ViewBag.Project.Name</h4>
        <h4>Бонус проекта: @ViewBag.Project.Bonus</h4>
        <h4>
            Сроки проекта: @if (ViewBag.Project.EndDate != null)
            {
                <span>С @ViewBag.Project.StartDate.ToShortDateString() по @ViewBag.Project.EndDate.ToShortDateString()</span>
            }
            else
            {
                <span>Бессрочный</span>
            }
        </h4>
    </div>
    @if (ViewBag.HaveTemplate == true)
    {
        <div class="col-4">
            <table>
                <thead>
                    <tr>
                        <th>
                            Шаблоны контрактов
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var template in ViewBag.ContractTemplates)
                    {
                        <tr>
                            <td>
                                <a asp-action="EditContractTemplateInProject" asp-route-id="@template.Id">template.TypeOfEmployment.Name</a>
                            </td>
                            <td>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
<br/>
<h4>Список пользователей в проекте</h4>
<p>
    <a type="button" class="btn btn-primary" asp-action="AddUserInProject" asp-route-id="@ViewBag.Project.Id">Добавить пользователя в проект</a>
</p>
<p>
    <a type="button" class="btn btn-primary" asp-action="CreateContractTemplateInProject" asp-route-id="@ViewBag.Project.Id">Создать шаблон договора</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Ставка
            </th>
            <th>
                Вид занятости
            </th>
            <th>
                Сотрудник
            </th>
            <th>№ договора</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr id="@item.Id">
            <td>
                @Html.DisplayFor(modelItem => item.HourlyWage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmpType.Name)
            </td>
            <td>
                @UserInfo.GetUserName(item.UserId)
            </td>
            <td>
                 @if (ProjectInfo.GetContract(item.Id) == "Без договора")
                 {
                        <a asp-controller="Projects"
                   asp-action="CreateUserContract" asp-route-id="@item.Id">Создать договор</a>
                    }
            </td>
            <td>
                <a type="button" title="Удалить" href="#" onclick="deleteUser(@item.Id, @UserInfo.GetUserName(item.UserId))"><i class="bx bxs-trash"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    <script>

        function deleteUser(id, name) {
            if (confirm('Вы хотите удалить пользователя "' + name + '" из проекта?')) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RemoveUserFromProject", "Projects")',
                    data: {
                        __RequestVerificationToken: gettoken(),
                        id: id
                    },
                    success: function (result) {
                        $('#' + id).remove();
                    }
                });
            }
        }

        function gettoken() {
            let token = '@Html.AntiForgeryToken()';
            token = $(token).val();
            return token;
        }

    </script>
}